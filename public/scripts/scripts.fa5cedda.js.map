{"version":3,"file":"scripts.js","sources":["../../.tmp/concat/scripts/scripts.js"],"names":["angular","module","config","$routeProvider","AnalyticsProvider","$logProvider","$compileProvider","FacebookProvider","debugEnabled","debug","debugInfoEnabled","myAppId","fbAppId","init","appId","version","status","xfbml","when","templateUrl","controller","controllerAs","requireLogin","otherwise","redirectTo","run","$rootScope","$location","$injector","$log","userService","Parse","storedRoute","returnToNext","returnToUrl","$on","event","next","current","dependencyRedirect","dest","path","isLoggedIn","url","originalPath","length","$scope","this","awesomeThings","$timeout","$q","Profile","page","pInfo","successMessage","errorMessage","formValidationError","fuErrorMessage","user","getUser","showPassSection","isFBUser","showCPSection","ShowCPSection","_getProfileSuccess","prInfo","image","name","firstName","lastName","_getProfileError","getProfileInfo","then","formInvalid","profileForm","$invalid","$pending","newpassword","$viewValue","newpassword2","curpassword","password","$watch","newval","undefined","_profileImageUpdateFailure","result","_profileImageUpdateSuccess","getCompleteProfile","profileData","updateUserInfo","lPromise","updateProfileImage","userId","s","lMessage","_updateProfileData","deferred","defer","updateProfileInfoResult","_finalUpdateSuccess","cpResult","profileResult","resolve","sessionToken","session","mobileVerified","code","_changePasswordFailure","error","parseErrorResponse","data","reject","msg","_profileUpdateFailure","swCode","notify","updateProfileInfo","changePassword","email","promise","submitForm","$window","Facebook","Config","errMsg","errEmail","errPwd","errPhone","showFBLogin","service_list","id","service_name","logged","authData","mobile","signup","passwd","user_name","u","JSON","stringify","r","jQuery","focus","facebookReady","fbPreLoginCheck","unbindFbWatch","isFBReady","n","loginWithFacebook","fbLogin","res","service","$cacheFactory","cache","transformJSON","profile","objectId","account","datastore","address","city","state","zipcode","_updateCacheObj","cacheObj","put","oID","_getProfileUpdatePayload","payload","_generateJSONForUpdate","get","updatedProfile","_getProfileInfo","profileInfo","fromCache","completeProfile","isMobileVerified","_updateProfileInfo","save","api","$promise","_changePassword","username","factory","$resource","getIEVersion","ua","navigator","userAgent","appName","re","RegExp","rv","exec","parseFloat","$1","needParseProxy","bRet","iever","sToken","e","o","_getSessionToken","_reqHeaders","X-Parse-Application-Id","appID","X-Parse-REST-API-Key","parseKey","X-Parse-Session-Token","_defPayload","cv","clientVersion","parseBaseURL","proxyParseAPI","proxyParseAPIPrefix","_parseResource","object","method","headers","paramSerializer","query","_updatedPayload","reqPayload","extend","params","success","captchaID","setWidgetId","w","login","_UpdateHeaderMode","view","hdrOnlyViews","indexOf","headerClass","loggedinClass","collapseHeaderMenu","$","collapse","signout","console","log","animate","scrollTop","$http","$filter","ObjResult","sts","isDefined","_defResult","_userStatusNotify","$broadcast","_updateLoggedInStatus","emailVerified","_updateUserInfo","bNotify","isUndefined","_updateUserProfile","isObject","merge","initials","charAt","toUpperCase","profilePic","_parseErrorResponse","ret","err","isString","message","match","replace","fromJson","details","_signup","toLowerCase","d","_login","_signout","p","_defUser","_fetchUserProfile","_forgotPassword","_fbPreLoginCheck","bValidate","isEmptyObject","fbAuthData","getLoginStatus","noop","rData","grantedPerms","map","v","permission","join","bGranted","each","reqPermissions","i","_fbLogin","bSignup","fbReady","response","scope","return_scopes","auth_type","authResponse","facebook","userID","access_token","accessToken","expiration_date","Date","now","expiresIn","parseAPI","_getCustomerList","handleSuccess","handleError","customerList","parentId","customers","forEach","customer","push","_saveContact","actions","action","dom","frequency","a","action_name","action_email","sms","action_sms","voice","action_voice","action_text","start","end","runonsave","_importCSV","fileContent","lines","split","line","fields","_setSelectedContact","contact","key","selectedContact","_getSelectedContact","_removeContact","customerId","_getActions","_removeAction","_saveSysAction","systemActionList","_getSystemActionList","sysAction","walletBalance","isReady","newVal","getSessionToken","getCustomers","getSystemActions","fetchUserProfile","forgotPassword","getCustomerList","getSystemActionList","saveContact","importCSV","setSelectedContact","getSelectedContact","removeContact","getActions","removeAction","saveSysAction","noGcMsg","alert","pop","apply","editContact","go","filterCardsBySearch","filterCards","filteredmerchantCardsList","filteredCards","item","storeName","merchantName","searchResults","file","periods","doms","actionCount","rootUser","actionr","actionfrequency","actionname","content","period","actionsince","actionuntil","add","remove","uploadFile","directive","fileReader","link","element","on","changeEvent","files","target","FileReader","onload","contents","$apply","readAsText","actionId","_UpdateFooterMode","noFooterViews","noAppViews","footerClass","footerVersion","cuurentYear","getFullYear","sysActions","constant","LOGIN_ERR_EMAIL","LOGIN_ERR_PWD","LOGIN_PRG","SIGNUP_ERR_EMAIL","SIGNUP_ERR_PWD","SIGNUP_ERR_PHONE","SIGNUP_PRG_VALID","SIGNUP_PRG_REG","LOGIN_FB_ERR","FORGOT_ERR_EMPTY","FORGOT_PRG","VERIFY_ERR_CODE","VERIFY_ERR_CODE2","VERIFY_PRG_VERIFY","VERIFY_PRG_RESEND","MISC_ERR_INVALID_ARGS","MISC_ERR_DEFAULT","SHOP_ERR_CATALOG","SHOP_SEARCH_NO_RESULTS","ADDRESS_ERR_DEFAULT","ADDRESS_VALIDATION_PRG","MSGS_EMPTY","TITLE_MAP","/","/shop","/wallet","/wallet/no-cache","/profile","/transactions","/privacy","/terms","/checkout","/signup","/login","/verify-mobile","/forgotpassword","/faq","TITLE_GA_MAP","player","showhiw","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubePlayerAPIReady","YT","Player","videoId","playerVars","autoplay","seekTo","playVideo","stopVideo"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\n/**\r\n * @ngdoc overview\r\n * @name freeminderApp\r\n * @description\r\n * # freeminderApp\r\n *\r\n * Main module of the application.\r\n */\r\nangular\r\n  .module('freeminderApp', [\r\n    'ngAnimate',\r\n    'ngCookies',\r\n    'ngResource',\r\n    'ngRoute',\r\n    'ngSanitize',\r\n    'ngTouch',\r\n    'angular-google-analytics',\r\n    'cgBusy',\r\n    'facebook',\r\n    'ui.date'\r\n\r\n  ])\r\n .config(['$routeProvider', 'AnalyticsProvider', '$logProvider', '$compileProvider', 'configuration', 'FacebookProvider', function ($routeProvider, AnalyticsProvider, $logProvider, $compileProvider, config, FacebookProvider) {\r\n\r\n    //enable/disable debugging based on config\r\n    $logProvider.debugEnabled(config.debug);\r\n    //enable/disable AngularJS debugging data\r\n    $compileProvider.debugInfoEnabled(config.debug);\r\n\r\n    //init the facebook app\r\n    var myAppId = config.fbAppId; //'1632206470353561'\r\n    //FacebookProvider.init(myAppId);\r\n    FacebookProvider.init({\r\n      appId: myAppId,\r\n      version: 'v2.4',  //Facebook API version\r\n      status: true,      //Check login status at startup\r\n      xfbml: false      //we are not using xfbml tags to render FB plug-in code\r\n    }, true);\r\n\r\n    $routeProvider\r\n      .when('/', {\r\n        templateUrl: 'views/main.html',\r\n        controller: 'MainCtrl',\r\n        controllerAs: 'main'\r\n      })\r\n      .when('/about', {\r\n        templateUrl: 'views/about.html',\r\n        controller: 'AboutCtrl',\r\n        controllerAs: 'about'\r\n      })\r\n      .when('/signup', {\r\n        templateUrl: 'views/signup.html',\r\n        controller: 'SignupCtrl',\r\n        controllerAs: 'signup'\r\n      })\r\n      .when('/login', {\r\n        templateUrl: 'views/login.html',\r\n        controller: 'LoginCtrl',\r\n        controllerAs: 'login'\r\n      })\r\n      .when('/customer-list', {\r\n        templateUrl: 'views/customer-list.html',\r\n        controller: 'CustomerListCtrl',\r\n        controllerAs: 'customerList',\r\n        requireLogin: true\r\n      })\r\n      .when('/edit-contact', {\r\n        templateUrl: 'views/edit-contact.html',\r\n        controller: 'EditContactCtrl',\r\n        controllerAs: 'editContact',\r\n        requireLogin: true\r\n      })\r\n      .when('/import-file', {\r\n        templateUrl: 'views/import-file.html',\r\n        controller: 'ImportFileCtrl',\r\n        controllerAs: 'importFile',\r\n        requireLogin: true\r\n      })\r\n      .when('/add-action', {\r\n        templateUrl: 'views/add-action.html',\r\n        controller: 'AddActionCtrl',\r\n        controllerAs: 'addAction'\r\n      })\r\n      .when('/new-contact', {\r\n        templateUrl: 'views/new-contact.html',\r\n        controller: 'NewContactCtrl',\r\n        controllerAs: 'newContact',\r\n        requireLogin: true\r\n      })\r\n      .when('/profile', {\r\n        templateUrl: 'views/profile.html',\r\n        controller: 'ProfileCtrl',\r\n        controllerAs: 'profile',\r\n        requireLogin: true\r\n      })\r\n      .when('/leftnav', {\r\n        templateUrl: 'views/leftnav.html',\r\n        controller: 'LeftnavCtrl',\r\n        controllerAs: 'leftnav'\r\n      })\r\n      .when('/system-action', {\r\n        templateUrl: 'views/system-action.html',\r\n        controller: 'SystemActionCtrl',\r\n        controllerAs: 'systemAction',\r\n        requireLogin: true\r\n      })\r\n      .when('/sysaction-list', {\r\n        templateUrl: 'views/sysaction-list.html',\r\n        controller: 'SysactionListCtrl',\r\n        controllerAs: 'sysactionList'\r\n      })\r\n      .when('/qna', {\r\n        templateUrl: 'views/qna.html'\r\n      })\r\n      .when('/tnc', {\r\n        templateUrl: 'views/tnc.html'\r\n      })\r\n      .otherwise({\r\n        redirectTo: '/'\r\n      });\r\n  }]).run(   ['$rootScope', '$location', '$injector', '$log', 'userService', 'Parse',\r\n     function($rootScope ,  $location ,  $injector , $log  , userService , Parse) {\r\n\r\n      $rootScope.storedRoute = {returnToNext:{}, returnToUrl:''};\r\n\r\n      // gets called whenever route changes\r\n      $rootScope.$on('$routeChangeStart', function(event, next, current) {\r\n\r\n\r\n\r\n        // handle plain redirects, which doesn't require remembering initial route\r\n        if (next && next.dependencyRedirect) {\r\n          var dest = next.dependencyRedirect($injector);\r\n          if (dest) {\r\n            $location.path(dest);\r\n            return;\r\n          }\r\n        }\r\n\r\n        // if requires login, remember route and take to login page\r\n        if (next && next.requireLogin && !userService.isLoggedIn() ) {\r\n\r\n          $rootScope.storedRoute.returnToNext = next;\r\n          $rootScope.storedRoute.returnToUrl = $location.url();\r\n          $location.path('/login');\r\n          return;\r\n        }\r\n        // after successful login, if remember route exists, take to remembered route\r\n        else if (current && next &&\r\n                 next.originalPath !== current.originalPath &&\r\n                 userService.isLoggedIn() ) {\r\n\r\n          // if remember route exists\r\n          if ( $rootScope.storedRoute.returnToUrl.length ) {\r\n            var redirectTo = $rootScope.storedRoute.returnToUrl;\r\n            $rootScope.storedRoute.returnToNext = {};\r\n            $rootScope.storedRoute.returnToUrl = '';\r\n            $location.path(redirectTo);\r\n            return;\r\n          }\r\n        }\r\n\r\n      });\r\n    }\r\n  ]);\r\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:MainCtrl\n * @description\n * # MainCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('MainCtrl', ['$scope', '$log', 'configuration', function ($scope, $log, config) {\n\n  var handleError = function () {\n    // TODO: Error messaging\n    // console.log('Get EMP catalog failed');\n  };\n\n  var handleSuccess = function (data) {\n\n  };\n\n  //catalogService.getData(handleSuccess, handleError);\n      \n}]);\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:AboutCtrl\n * @description\n * # AboutCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('AboutCtrl', function () {\n    this.awesomeThings = [\n      'HTML5 Boilerplate',\n      'AngularJS',\n      'Karma'\n    ];\n  });\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:ProfileCtrl\n * @description\n * # ProfileCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('ProfileCtrl', ['$scope', '$log', '$location', '$timeout', '$q', 'configuration', 'userService', 'Profile',\n    function ($scope, $log, $location, $timeout, $q, config, userService, Profile) {\n\n      // populate data required for rendering\n      $scope.page = 'profile';\n      $scope.pInfo = {};\n      $scope.successMessage = '';\n      $scope.errorMessage = '';\n      $scope.formValidationError = false;\n      $scope.fuErrorMessage = '';\n\n      var user = userService.getUser();\n      $scope.showPassSection = !user.isFBUser;\n\n      // handler to enable change password section\n      $scope.showCPSection = false;\n      $scope.ShowCPSection = function() {\n        $scope.showCPSection = true;\n      };\n\n      // success handler get profile\n      var _getProfileSuccess = function(prInfo) {\n        $scope.image = prInfo.image || '';\n        $scope.pInfo = prInfo;\n        $scope.name = prInfo.firstName || prInfo.lastName;\n        $scope.pInfo.image = $scope.pInfo.image || '';\n      };\n\n      // failure handler for get profile\n      // currently redirecting to login page\n      var _getProfileError = function() {\n        $log.debug('/users/me failed redirecting to login');\n        $location.path('/login');\n      };\n\n      // fetch profile info\n      Profile.getProfileInfo().then(_getProfileSuccess, _getProfileError);\n\n      $scope.formInvalid = function() {\n\n        // inline validation failures, error message is set inline\n        if ($scope.profileForm.$invalid || $scope.profileForm.$pending) {\n          $scope.errorMessage = '';\n          return true;\n        }\n\n        var newpassword = $scope.profileForm.newpassword.$viewValue,\n            newpassword2 = $scope.profileForm.newpassword2.$viewValue,\n            curpassword = $scope.profileForm.password.$viewValue;\n\n        // only new password is entered case\n        if (newpassword && !curpassword) {\n          $scope.errorMessage = 'Your current password is not correct.';\n          $scope.formValidationError = true;\n          return true;\n        }\n\n        // only current password is entered case\n        if(curpassword && !newpassword) {\n          $scope.errorMessage = 'Your new password is not correct.';\n          $scope.formValidationError = true;\n          return true;\n        }\n\n        // new password and confirmation is not matching case\n        if (newpassword !== newpassword2) {\n          // error message is shown inline to newpassword2 field\n          $scope.errorMessage = '';\n          return true;\n        }\n\n        // new password is same as current password case\n        if (curpassword && (newpassword === curpassword)) {\n          $scope.errorMessage = 'New password shouldn\\'t be same as current password.';\n          $scope.formValidationError = true;\n          return true;\n        }\n\n        $scope.errorMessage = ($scope.formValidationError) ? '' : $scope.errorMessage ;\n        $scope.formValidationError = false;\n        return false;\n      };\n\n      // look for image upload and update parse\n      $scope.$watch('pInfo.image', function(newval) {\n\n        // page load case\n        if(newval === undefined) {\n          return;\n        }\n\n        $log.debug(newval + ' ' + $scope.pInfo.image);\n\n        // profile info is fetched with image\n        if($scope.image === $scope.pInfo.image) {\n          return;\n        }\n\n        // Profile image update error, show generic error message\n        var _profileImageUpdateFailure = function(result) {\n          $scope.errorMessage = 'Unable to process your request';\n          $log.debug('Profile Image Update failed');\n          $log.debug(result);\n        };\n\n        // Profile image update success, update user service\n        var _profileImageUpdateSuccess = function() {\n          $scope.image = $scope.pInfo.image;\n          Profile.getCompleteProfile().then(function(profileData) {\n            if(profileData) {\n              profileData.image = $scope.pInfo.image;\n              userService.updateUserInfo(profileData);\n            }\n          });\n        };\n\n        // new image is uploaded, update profile\n        $scope.lPromise = Profile.updateProfileImage($scope.pInfo.userId, $scope.pInfo.image, $scope.image);\n        $scope.lPromise.then(_profileImageUpdateSuccess,\n                             _profileImageUpdateFailure,\n                             function(s) {$scope.lMessage = s;});\n      });\n\n      var _updateProfileData = function() {\n\n        var deferred = $q.defer();\n        var updateProfileInfoResult = {};\n\n        // success handler\n        // Update user service with new changes, for change password, update sessiontoken\n        // For mobile update case, take user to verify-mobile page\n        // For other updates, show confirmation and keep in him profile page\n        var _finalUpdateSuccess = function(cpResult, profileResult) {\n          deferred.resolve('success');\n\n          // clear password fields and hide password section\n          $scope.newpassword = '';\n          $scope.newpassword2 = '';\n          $scope.password = '';\n          $scope.showCPSection = false;\n\n          // update userService with profile changes\n          // For password change, update user service with new session token too.\n          var sessionToken = (cpResult && cpResult.result) ? (cpResult.result.session || '') : '';\n          Profile.getCompleteProfile().then(function(profileData){\n            $log.debug(profileData);\n            if(profileData) {\n              profileData.session = sessionToken;\n              profileData.mobileVerified = (profileResult && profileResult.code === 11) ? false : profileData.mobileVerified;\n              userService.updateUserInfo(profileData);\n            }\n          });\n\n          $log.debug(profileResult);\n\n          // Redirect the user to verify-mobile page for mobile number change\n          if(profileResult && profileResult.code === 11) {\n            $log.debug('redirecting to verify-mobile');\n            $location.path('/verify-mobile');\n            return;\n          }\n\n          // Show status success message\n          $scope.successMessage = 'User details have been saved successfully.';\n        };\n\n        // Change password failures, show password error\n        var _changePasswordFailure = function(result) {\n          var error = userService.parseErrorResponse(result.data || result);\n          deferred.reject('failure');\n          $scope.errorMessage = (error.msg === 'username/password not correct') ?\n            'Your current password is not correct. Please try again.' : 'Unable to process your request.';\n          $log.debug(error.msg);\n        };\n\n        // Profile update error, show generic error message\n        var _profileUpdateFailure = function(result) {\n          deferred.reject('failure');\n          $log.debug('Profile Update failed');\n          var error = userService.parseErrorResponse(result.data || result);\n          if(error.swCode === 603) {\n            $scope.errorMessage = 'Invalid mobile number. Please try again.';\n          }\n          $scope.errorMessage = $scope.errorMessage || 'Unable to process your request';\n        };\n\n        $timeout(function() {\n          deferred.notify('Updating profile data');\n        }, 0);\n\n\n        // chain updates in profile page\n        // change password should be done last, since it invalidates session token\n        // no rollback of previous steps if any of the udpates fail\n        Profile.updateProfileInfo($scope.pInfo).then(function(result) {\n          updateProfileInfoResult = result || {};\n          //deferred.notify('Updating password');\n          return Profile.changePassword($scope.pInfo.email, $scope.password, $scope.newpassword);\n        }, _profileUpdateFailure).then(function(cpResult) {\n          _finalUpdateSuccess(cpResult, updateProfileInfoResult.result);\n        }, _changePasswordFailure).catch(function(error) {\n          _profileUpdateFailure(error);\n        });\n\n        return deferred.promise;\n\n      };\n\n      // handle form submission\n      $scope.submitForm = function() {\n\n        $scope.errorMessage = $scope.successMessage = '';\n\n        if ($scope.newpassword !== $scope.newpassword2) {\n          $scope.errorMessage = 'Passwords didn\\'t match';\n          $scope.newpassword = '';\n          $scope.newpassword2 = '';\n          return false;\n        }\n\n        if ($scope.newpassword && !$scope.password) {\n          $scope.errorMessage = 'Your current password is not correct. Please try again.';\n          return false;\n        }\n\n        $scope.lPromise = _updateProfileData();\n        $scope.lPromise.then(function() {\n          $log.debug('Profile update successful');\n        }, function() {\n          $log.debug('Profile update failed');\n        }, function(s) {\n          $log.debug('On progress ' + s);\n          $scope.lMessage = s;\n        });\n\n      };\n\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:SignupCtrl\n * @description\n * # SignupCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('SignupCtrl', ['$scope', '$window', '$location', '$log', 'userService', 'Facebook', 'configuration',\n    function($scope, $window, $location, $log, userService, Facebook, Config) {\n\n    $scope.errMsg = '';\n    $scope.lPromise = null;\n    $scope.lMessage = '';\n    $scope.errEmail = 'Enter a valid email';\n    $scope.errPwd ='Password must be 6 character long';\n    $scope.errPhone = 'Please enter 10 digit phone number';\n    $scope.showFBLogin = true; //Config.enableFB;\n\n\n    $scope.service_list = [\n\n      {id:0, name:'Select Service' },\n      {id:1, name:'GYM'},\n      {id:2, name:'EDUCATION'},\n      {id:3, name:'MOTOR SERVICE'},\n      {id:4, name:'INSURANCE'},\n      {id:5, name:'LEGAL'},\n      {id:6, name:'COMMUNITY'},\n      {id:7, name:'MEDICAL'},\n      {id:8, name:'DIAGNOSTIC CENTER'},\n      {id:9, name:'HOME'},\n      {id:10, name:'CABLE/INTERNET SERVICE'},\n      {id:11, name:'OTHER SUBSCRIPTIONS'},\n\n    ];\n    $scope.service_name = $scope.service_list[2];\n\n    /* sample user object obtained from Facebook\n                      {\"id\":\"10153468797737360\",\"email\":\"marikanti@gmail.com\",\"first_name\":\"Hanumantha\",\"gender\":\"male\",\"last_name\":\"Marikanti\",\"link\":\"https://www.facebook.com/app_scoped_user_id/10153468797737360/\",\"locale\":\"en_US\",\"name\":\"Hanumantha Marikanti\",\"timezone\":6.5,\"updated_time\":\"2013-12-24T09:53:10+0000\",\"verified\":true}\n\n    */\n\n    $scope.user = {};\n    $scope.logged = false;\n\n    /* Sample authResponse object obtained from Facebook\n            {\"accessToken\":\"CAAXMe67dkpkBAEeZBHv5glPY6R0TdXxOaIq6o72O1jutt1ojApsZAi590079na3pvP\",\"userID\":\"10153468797737360\",\"expiresIn\":6530,\"signedRequest\":\"B5p0vExqQxNXKhJlmV2SFF4ZlheUxUdWFPb2IsImlzcpZCI6IjEwMTUzNDY4Nzk3NzM3MzYwIn0\"}\"\n\n    */\n    $scope.authData = {};\n\n    // Defining user logged status\n    $scope.logged = false;\n\n    /*Simple signup flow*/\n    //Widget callback and store widget ID\n\n\n    $scope.submitForm = function() {\n      //clear the error message first\n      $scope.errMsg = '';\n      $scope.lMessage = '';\n      //get captcha response\n      var captchaValue = '';\n      $log.debug('Before signup ' + $scope.email, $scope.mobile + $scope.service_name.name);\n      $scope.lPromise = userService.signup($scope.email, $scope.passwd, $scope.mobile, $scope.user_name, $scope.service_name.name);\n\n      $scope.lPromise.then(function(u) {\n        //success callback\n        $log.debug('After signup ' + JSON.stringify(u));\n\n        $location.path('/customer-list');\n      }, function(r) {\n          //error callback\n        $log.debug('Signup failed ' + JSON.stringify(r));\n        $scope.errMsg = r.msg;\n        //on failure reset the captcha widget as it can't be re-used\n\n      }, function(s) {\n        $scope.lMessage = s;\n      }).finally(function() {\n        //google recaptcha causes input element\n        //in IE not to display any updated text.\n        //setting focus() seems to fix this issue\n        $window.jQuery('input:first').focus();\n      });\n    };\n\n    //Based on FB SDK, enable/disable FB button\n    //$scope.facebookReady = userService.isFBReady();\n    $scope.facebookReady = false;\n    //if the SDK is not loaded till now, let's monitor for it's status update\n    if(!$scope.facebookReady) {\n      var unbindFbWatch = $scope.$watch(function() {\n        return userService.isFBReady();\n      }, function(n) {\n        $scope.facebookReady = n;\n        if(n) {\n          userService.fbPreLoginCheck();\n          //FB is loaded & we don't need to watch anymore\n          unbindFbWatch();\n        }\n      });\n    } else {\n      userService.fbPreLoginCheck();\n    }\n\n    $scope.loginWithFacebook = function() {\n      $scope.errMsg = '';\n      $scope.lMessage = '';\n      //perform FB Login via userservice\n      $scope.lPromise = userService.fbLogin(true);\n      $scope.lPromise.then(function(u) {\n        $log.debug('After successful FB login ' + JSON.stringify(u));\n        $location.path('/shop');\n      }, function(res) {\n        //error callback & show the error message\n        $log.debug('FB Login failed ' + JSON.stringify(res));\n        $scope.errMsg = res.msg;\n      }, function(s) {\n        $log.debug('On progress ' + s);\n        $scope.lMessage = s;\n      });\n      return false;\n    };\n\n\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc service\n * @name freeminderApp.profile\n * @description\n * # profile\n * Service in the freeminderApp.\n */\nangular.module('freeminderApp')\n  .service('Profile', [ 'Parse', '$q', '$log', '$timeout', '$cacheFactory', 'userService',\n    function(Parse, $q, $log, $timeout, $cacheFactory, userService){\n      //console.log('ProfileService');\n      var cache = $cacheFactory('Profile');\n\n      var transformJSON = function(result) {\n        var profile = {};\n        profile.userId = result.objectId || '';\n        var account = (result.datastore) ? (result.datastore.account || {}) : {};\n        profile.firstName = account.firstName || '';\n        profile.lastName = account.lastName || '';\n        profile.address = account.address || '';\n        profile.city = account.city || '';\n        profile.state = account.state || '';\n        profile.zipcode = account.zipcode || '';\n        profile.email = result.email || '';\n        profile.mobile = result.mobile || '';\n        profile.image = result.image || '';\n        return profile;\n      };\n\n      var _updateCacheObj = function(cacheObj, user, pInfo) {\n\n        // for firsttime users they may not have datastore account\n        cacheObj.datastore.account = cacheObj.datastore.account || {};\n\n        cacheObj.datastore.account.firstName = pInfo.firstName;\n        cacheObj.datastore.account.lastName = pInfo.lastName;\n        cacheObj.datastore.account.address = pInfo.address;\n        cacheObj.datastore.account.city = pInfo.city;\n        cacheObj.datastore.account.state = pInfo.state;\n        cacheObj.datastore.account.zipcode = pInfo.zipcode;\n        cacheObj.mobile = pInfo.mobile;\n        cacheObj.image = pInfo.image;\n        cache.put(user.oID + 'ProfileInfo', cacheObj);\n\n        return cacheObj;\n      };\n\n      var _getProfileUpdatePayload = function(cacheObj) {\n        // now create payload from cache\n        var payload = {};\n        payload.datastore = cacheObj.datastore;\n        payload.mobile = cacheObj.mobile;\n        return payload;\n      };\n\n      var _generateJSONForUpdate = function(pInfo) {\n\n        var deferred = $q.defer();\n\n        var user = userService.getUser();\n        var cacheObj = cache.get(user.oID + 'ProfileInfo');\n        if (!cacheObj || !cacheObj.datastore) {\n          //get updated profile\n          _getProfileInfo(false, true).then(function(profileInfo) {\n            var updatedProfile = _updateCacheObj(profileInfo, user, pInfo);\n            var payload = _getProfileUpdatePayload(updatedProfile);\n            deferred.resolve(payload);\n          }, function() {\n            deferred.reject();\n          });\n        }\n        else {\n          var updatedProfile = _updateCacheObj(cacheObj, user, pInfo);\n          var payload = _getProfileUpdatePayload(updatedProfile);\n          deferred.resolve(payload);\n        }\n\n        return deferred.promise;\n      };\n\n      var _getProfileInfo = function(fromCache, completeProfile) {\n\n        var deferred = $q.defer();\n        var user = userService.getUser();\n        if(fromCache) {\n          var profileInfo = cache.get(user.oID + 'ProfileInfo');\n          if (profileInfo) {\n            profileInfo = completeProfile ? profileInfo : transformJSON(profileInfo);\n            deferred.resolve(profileInfo);\n            return deferred.promise;\n          }\n        }\n\n        // not in cache\n\n          // map few fields to be compatible with user service\n          var profileInfo = {};\n          profileInfo.id = user.oID;\n          profileInfo.mobileVerified = user.isMobileVerified;\n          cache.put(user.oID + 'ProfileInfo', profileInfo);\n          profileInfo = completeProfile ? profileInfo :transformJSON(profileInfo);\n          deferred.resolve(profileInfo);\n\n          return deferred.promise;\n      };\n\n      var _updateProfileInfo = function(pInfo) {\n\n        var deferred = $q.defer();\n\n        // generate request payload\n        var promise = _generateJSONForUpdate(pInfo);\n        promise.then(function(payload) {\n          // call parse api\n          Parse.save({api: 'appUpdateProfile'}, payload).$promise.then(function(result) {\n            deferred.resolve(result);\n          }, function(error) {\n            deferred.reject(error);\n          });\n        }, function() { deferred.reject({'status':'failed'});\n        });\n\n        return deferred.promise;\n      };\n\n      var _changePassword = function(email, password, newpassword) {\n\n        var deferred = $q.defer();\n\n        // validation added here to make controller flow simpler\n        if(!password || !newpassword || !password.length ||\n           !newpassword.length) {\n          deferred.resolve({'result': {status : 'noupdate'}});\n          return deferred.promise;\n        }\n\n        // generate request payload\n        var payload = {};\n        payload.username = email;\n        payload.password = password;\n        payload.newpassword = newpassword;\n\n        // call parse api\n        return Parse.save({api: 'webChangePassword'}, payload).$promise;\n\n      };\n\n\n\n      return {\n        getProfileInfo : function() { return _getProfileInfo(false, false); },\n        getCompleteProfile : function() { return _getProfileInfo(true, true); },\n        updateProfileInfo : _updateProfileInfo,\n        changePassword : _changePassword\n\n      };\n\n\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc service\n * @name freeminderApp.parse\n * @description\n * # parse\n * Factory in the freeminderApp.\n */\nangular.module('freeminderApp')\n  .factory('Parse', ['$resource', '$log', 'configuration', '$rootScope', '$window',\n    function($resource, $log, config, $scope, $window) {\n        \n    \n    var sToken = '';\n      //get session token when user is updated\n      $scope.$on('user:updated', function(e, o) {\n        sToken = o.sToken;\n      });\n\n      var _getSessionToken = function() {\n        return sToken.length ? sToken : null;\n      };\n\n      //Ref: https://msdn.microsoft.com/en-us/library/ms537509(v=vs.85).aspx\n      function getIEVersion() {\n        var ua = $window.navigator.userAgent,\n            appName = $window.navigator.appName,\n            re = new RegExp('MSIE ([0-9]{1,}[\\.0-9]{0,})'),\n            rv = -1;\n        if(appName === 'Microsoft Internet Explorer' && re.exec(ua) !== null ) {\n          rv = parseFloat( RegExp.$1 );\n        }\n        return rv;\n      }\n\n      //Checking withCredentials in XHR is failing\n      //Falling back to UA based detection\n      //Below detection will not work for IE11 and above as MS removed MSIE from UA\n      function needParseProxy() {\n        var bRet = false, iever = getIEVersion();\n\n        if(iever > -1 && iever >= 9.0 && iever < 10) {\n          bRet = true;\n        }\n        $log.debug('Proxy parse request ' + (bRet ? 'needed' : 'not needed'));\n        return bRet;\n      }\n\n      var _reqHeaders = {\n        'X-Parse-Application-Id' : config.appID,\n        'X-Parse-REST-API-Key' : config.parseKey,\n        'X-Parse-Session-Token' : _getSessionToken\n      }, _defPayload = {\n        'cv' : config.clientVersion\n      };\n\n      //For IE9 proxy parse request\n      var parseBaseURL = 'https://api.parse.com';\n      if(config.proxyParseAPI && needParseProxy()) {\n        parseBaseURL = config.proxyParseAPIPrefix;\n      }\n\n      var _parseResource =  $resource(parseBaseURL + '/1/:object/:api', { object: 'functions' }, {\n          save: { method : 'POST', headers : _reqHeaders, paramSerializer: '$httpParamSerializerJQLike'},\n          query: { method: 'GET', headers: _reqHeaders, paramSerializer: '$httpParamSerializerJQLike'},\n          put: { method: 'PUT', headers: _reqHeaders, paramSerializer: '$httpParamSerializerJQLike'}\n        });\n\n      var _updatedPayload = function(reqPayload) {\n          reqPayload = reqPayload || {};\n          //Add default value to the payload\n          angular.extend(reqPayload, _defPayload);\n          return reqPayload;\n      };\n\n      return {\n        save : function(params, reqPayload, success, error) {\n          if(!params) {\n            $log.debug('Required field params is undefined');\n          }\n          return _parseResource.save(params, _updatedPayload(reqPayload), success, error);\n        },\n        query: function(params, reqPayload, success, error) {\n          if(!params) {\n            $log.debug('Required field params is undefined');\n          }\n          return _parseResource.query(params, _updatedPayload(reqPayload), success, error);\n        },\n        put: function(params, reqPayload, success, error) {\n          if(!params) {\n            $log.debug('Required field params is undefined');\n          }\n          return _parseResource.put(params, _updatedPayload(reqPayload), success, error);\n        }\n      };\n        \n        \n        \n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:LoginCtrl\n * @description\n * # LoginCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('LoginCtrl', ['$scope', '$window', '$log', '$location', 'userService', 'Facebook', 'configuration',\n    function ($scope,   $window,   $log,   $location,   userService,   Facebook,   Config) {\n\n\n    $scope.errMsg = '';\n    $scope.lPromise = null;\n    $scope.lMessage = '';\n    $scope.showFBLogin = true; //Config.enableFB;\n  \n\n    /*Simple user form signup*/\n    var captchaID = 0;\n    //Widget callback and store widget ID\n    $scope.setWidgetId = function(w) {\n      captchaID = w;\n    };\n    $scope.submitForm = function(){\n      //clear error message\n      $scope.errMsg = '';\n      $scope.lMessage = '';\n\n      //get captcha response\n\n      //send a request to user service and submit the form\n      $scope.lPromise = userService.login($scope.user, $scope.password);\n      $scope.lPromise.then(function(u) {\n        $log.debug('After successful login ' + JSON.stringify(u));\n        //If mobile is not verified, rediret to mobile verify page\n        //$location.path( u.mobileVerified ? '/shop' : '/verify-mobile');\n        $location.path('/customer-list');\n      }, function(res) {\n        //error callback & show the error message\n        $log.debug('Login failed ' + JSON.stringify(res));\n        $scope.errMsg = res.msg;\n        //on failure reset the captcha widget as it can't be re-used\n\n      }, function(s) {\n        $log.debug('On progress ' + s);\n        $scope.lMessage = s;\n      }).finally(function() {\n        //google recaptcha causes input element\n        //in IE not to display any updated text.\n        //setting focus() seems to fix this issue\n        $window.jQuery('input:first').focus();\n      });\n      return false;\n    };\n\n    //Based on FB SDK, enable/disable FB button\n    //$scope.facebookReady = userService.isFBReady();\n    $scope.facebookReady = false;\n    //if the SDK is not loaded till now, let's monitor for it's status update\n    if(!$scope.facebookReady) {\n      var unbindFbWatch = $scope.$watch(function() {\n        return userService.isFBReady();\n      }, function(n) {\n        $scope.facebookReady = n;\n        if(n) {\n          userService.fbPreLoginCheck();\n          //FB is loaded & we don't need to watch anymore\n          unbindFbWatch();\n        }\n      });\n    } else {\n      userService.fbPreLoginCheck();\n    }\n\n    $scope.loginWithFacebook = function() {\n      $scope.errMsg = '';\n      $scope.lMessage = '';\n      //perform FB Login via userservice\n      $scope.lPromise = userService.fbLogin();\n      $scope.lPromise.then(function(u) {\n        $log.debug('After successful FB login ' + JSON.stringify(u));\n        $location.path('/shop');\n      }, function(res) {\n        //error callback & show the error message\n        $log.debug('FB Login failed ' + JSON.stringify(res));\n        $scope.errMsg = res.msg;\n      }, function(s) {\n        $log.debug('On progress ' + s);\n        $scope.lMessage = s;\n      });\n      return false;\n    };\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:HeaderCtrl\n * @description\n * # HeaderCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('HeaderCtrl',  ['$scope', '$rootScope', '$window', '$log', '$location', 'userService', function ($scope, $rootScope, $window, $log, $location, userService) {\n\n    $scope.isLoggedIn = userService.isLoggedIn();\n\n\n    var user = userService.getUser(),\n    $ = $window.jQuery; //store jQuery locally\n    $scope.username = user.firstName || user.name;\n\n    $scope.headerClass = ''; //class needs to be added to change header state\n    $scope.loggedinClass = '';\n\n    //Utility fn to update header mode\n    function _UpdateHeaderMode() {\n\n      var view = $location.path(),\n          hdrOnlyViews = ['/login', '/signup'];\n      //view always takes precedence\n      if(hdrOnlyViews.indexOf(view) !== -1 ) {\n        $scope.headerClass = 'logo-only-navbar';\n        return;\n      }\n      //Now check loggedin state\n      $scope.headerClass = ($scope.isLoggedIn ? 'loggedin-navbar' : '');\n\n      //updated loggedin class, needed for width adjustment\n      $scope.loggedinClass = ($scope.isLoggedIn ? 'loggedin-img-header' : '');\n\n\n    }\n\n    function collapseHeaderMenu() {\n      //User navigate to new page. Hide navbar\n      $('#sw-navbar-collapse').collapse('hide');\n    }\n\n    $scope.signout = function(){\n      //signout the user\n      userService.signout().finally(function() {\n        //we don't need to worry whether it's success or failure\n        $log.debug('After logging out ' + JSON.stringify(userService.getUser()));\n        $location.path('/main');\n      });\n      collapseHeaderMenu();\n      return false;\n    };\n\n    //Watch for event about cart & user info updated and update the above variables.\n    $scope.$on('user:updated', function() {\n      console.log('User update event' );\n\n      var u = userService.getUser();\n      $scope.isLoggedIn = u.isLoggedIn;\n      $scope.username = u.firstName || u.name;\n\n\n      _UpdateHeaderMode();\n    });\n\n    //Use rootscope to hide navbar (top & bottom) drop-down to collapse on navigation\n    //since this is ajax navigation\n    $rootScope.$on('$routeChangeSuccess', function() {\n      collapseHeaderMenu();\n      _UpdateHeaderMode();\n      //Let's take him to top of the page.\n      $('html, body').animate({scrollTop: 0});\n    });\n\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc service\n * @name freeminderApp.userservice\n * @description\n * # userservice\n * Service in the freeminderApp.\n */\nangular.module('freeminderApp')\n  .service('userService', ['$rootScope', '$http', '$q', '$log', '$timeout', '$window', 'configuration', 'Parse', 'Facebook', '$filter', function ( $rootScope, $http, $q, $log, $timeout, $window, config, Parse, Facebook, $filter) {\n\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n\n\n    var _defUser = {  //Default user object\n          'isLoggedIn' : false,\n          'isFBUser' : false,\n          'name': '',\n          'email': '',\n          'emailVerified': false,\n          'mobile': '',\n          'mobileVerified': false,\n          'profilePic': '',\n          'oID': '',\n          'sToken': '',\n          'firstName': '',\n          'lastName': '',\n          'initials': '',\n          'walletBalance': 0,\n          'datastore': {},\n        },\n        user = {},    //cached user info\n        fbReady = false, $ = $window.jQuery;\n\n\n        var customerList = [];\n        var systemActionList = [];\n        var selectedContact = {};\n\n    function ObjResult(sts, code, swCode, msg) {\n      this.sts = sts || false;\n      this.code = code || 1;\n      this.msg = msg || 'Unable to process your request at this time. Please try again later.';\n      this.swCode = -1;\n      if(angular.isDefined(swCode)) {\n        this.swCode = swCode;\n      }\n    }\n    function _defResult() {\n      /*Default result object*/\n      return new ObjResult();\n    }\n    //Using merge for recursive copy and avoid object reference\n    angular.merge(user, _defUser);\n\n    //Notify changes in user data to all listeners\n    function _userStatusNotify() {\n      $rootScope.$broadcast('user:updated', user);\n    }\n\n    function _updateLoggedInStatus() {\n      user.isLoggedIn = (user.isFBUser) || ( (user.email.length && user.emailVerified) || (user.mobile.length && user.mobileVerified) );\n    }\n\n    //Update user info from Parse API response\n    function _updateUserInfo(u, bNotify) {\n      if(angular.isUndefined(bNotify)) {\n       bNotify = true;\n     }\n      user.email = u.email || '';\n      user.mobile = u.mobile || '';\n      user.name = u.username || '';\n      user.oID = u.objectId;\n      user.sToken = u.session || user.sToken;\n      user.emailVerified = u.emailVerified;\n      user.mobileVerified = u.mobileVerified || false;\n\n\n      /* jshint +W106 */\n      //store data store & other info\n      _updateUserProfile(u);\n      _updateLoggedInStatus();\n      if(bNotify) {\n        _userStatusNotify();\n      }\n\n    }\n\n    function _updateUserProfile(o) {\n      if(angular.isUndefined(o) || !angular.isObject(o)){\n        return;\n      }\n      if(angular.isDefined(o.datastore)) {\n        angular.merge(user.datastore, o.datastore);\n        if(angular.isDefined(user.datastore.account)){\n          user.firstName = user.datastore.account.firstName || '';\n          user.lastName = user.datastore.account.lastName || '';\n          if(user.firstName.length && user.lastName.length) {\n            user.initials = (user.firstName.charAt(0) + user.lastName.charAt(0)).toUpperCase();\n          }else {\n            user.initials = '';\n          }\n        }\n      }\n      user.profilePic = o.image || user.profilePic;\n    }\n\n    function _parseErrorResponse(o) {\n      //parse error response and return in expected format\n      var ret = _defResult(), err = {};\n\n      //if you got the same object (return value from local utility function)\n      //return as it is.\n      if(angular.isDefined(o.sts)) {\n        return o;\n      }\n\n      if(o.code) {\n        ret.code = o.code;\n      }\n      if(angular.isString(o.result)) {\n        ret.msg = o.result;\n        return ret;\n      }\n      if(angular.isUndefined(o.error)){\n        return ret;\n      }\n\n      //error message is returned as string instead of object occasionally :(\n      if(angular.isObject(o.error) && o.error.message){\n        ret.msg = o.error.message;\n      } else if(angular.isString(o.error)){\n        ret.msg = o.error;\n        if(o.error.match(/^JSON:/)) {\n          ret.msg = o.error.replace(/^JSON:/,'');\n        }\n\n        try {\n          err = angular.fromJson(ret.msg);\n          if(err && (err.details || err.message||err.status)) {\n            ret.msg = (err.details || err.message || err.status);\n          }\n          ret.swCode = err.code || -1;\n        }catch(e){}\n      }\n\n      //remove some default text.\n      ret.msg = ret.msg.replace(/^Request failed with response: /,'');\n      return ret;\n    }\n\n    function _signup(email, password, mobile, username, service_name) {\n      email = email || '';\n      password = password || '';\n      mobile = mobile || '';\n      email = email.toLowerCase();\n\n      var ret = _defResult(), d = $q.defer();\n\n      //Basic validation\n      if(!email.length || !password.length || !mobile.length ) {\n        ret.msg = 'Invalid Input!';\n        //reject via timeout for indicator to receive rejection\n        $timeout(function() {\n          d.reject(ret);\n        }, 0);\n        return d.promise;\n      }\n\n      //Perform email & mobile validation\n      $timeout(function() {\n        d.notify('validating');\n      },0);\n\n        var o = {\n          'email' : email,\n          'password': password,\n          'mobile': mobile,\n          'username' : username,\n          'service' : service_name\n\n        };\n        Parse.save({api: 'appSignup'}, o).$promise.then(function(data){\n        $log.debug('signup response ' + JSON.stringify(data));\n        if(angular.isUndefined(data.result) || data.result.status !== 'success') {\n          d.reject(ret);\n        }\n        /*Update all user info*/\n        _updateUserInfo(data.result.user);\n        ret.sts = true;\n        d.resolve(user);\n      }).catch(function(r){\n        ret = _parseErrorResponse(r.data||r);\n        d.reject(ret);\n      }).finally(function(){\n        d.reject(ret);\n      }, function(s) {\n        //proxy the notification\n        if(angular.isString(s) && s.length) {\n          d.notify(s);\n        }\n      });\n\n      //always return deferred object\n      return d.promise;\n\n\n    }\n\n    function _login(username, password) {\n      //normalize input\n      username = username || '';\n      password = password || '';\n\n      username = username.toLowerCase();  //email address should be case-insensitive here.\n\n      var ret = _defResult(), d = $q.defer();\n\n      //input validation\n      //validation as per rule, should be done in the controller. We do\n      //minimum empty check here.\n      if(!username.length || !password.length) {\n        ret.msg = 'Invalid input!';\n        //reject via timeout for indicator to receive rejection\n        $timeout(function() {\n          d.reject(ret);\n        }, 0);\n        return d.promise;\n      }\n\n      //set progress\n      //As this is before we return promise, wrap it in timeout\n      $timeout(function() {\n        d.notify('Logging in');\n      }, 0);\n      var o = {\n        'username': username,\n        'password': password\n\n      };\n\n      //send ajax form submission\n      Parse.save({api: 'appLogin'}, o).$promise.then(function(data){\n        $log.debug('Login response ' + JSON.stringify(data));\n        if(angular.isUndefined(data.result) || data.result.status !== 'success') {\n          d.reject(ret);\n        }\n        /*Update all user info*/\n        _updateUserInfo(data.result.user);\n        ret.sts = true;\n        d.resolve(user);\n      }).catch(function(r){\n        ret = _parseErrorResponse(r.data||r);\n        d.reject(ret);\n      }).finally(function(){\n        d.reject(ret);\n      }, function(s) {\n        //proxy the notification\n        if(angular.isString(s) && s.length) {\n          d.notify(s);\n        }\n      });\n\n      //always return deferred object\n      return d.promise;\n    }\n\n    function _signout() {\n      var ret = _defResult(), d = $q.defer(), p = d.promise;\n\n      //pre-check\n      if(!user.oID.length) {\n        $timeout(function() {\n          d.reject(ret);\n        }, 0);\n        return p;\n      }\n\n      //signout the user\n      Parse.save({api: '', object: 'logout'}).$promise\n      .finally(function() {\n        //irrespective of success or failure status\n        //delete the object\n        angular.extend(user, _defUser);\n        ret.sts = true;\n        ret.msg = '';\n        d.resolve(ret);\n        _updateLoggedInStatus();\n        _userStatusNotify();\n      });\n      return p;\n    }\n\n    function _fetchUserProfile() {\n      var ret = _defResult(), d = $q.defer(), p = d.promise;\n      if(!user.oID.length || !user.email.length) {\n        //first user should be loggedin to get profile info\n        $timeout(function() {\n          d.reject(ret);\n        }, 0);\n        return p;\n      }\n\n      var o = {\n        'email' : user.email\n      };\n      //user is logged in. Let's get profile info\n      $timeout(function() {\n        d.notify('Getting profile');\n      }, 0);\n\n      Parse.save({api: 'appGetUserDetailsFromEmail'}, o).$promise\n      .then(function(data) {\n        $log.debug('Got the profile ' + JSON.stringify(data));\n        //successfully got profile info\n        if(!data || angular.isUndefined(data.result)) {\n          d.reject(ret);\n          return;\n        }\n        //_saveUserProfile(data);\n        //On success return updated user profile object\n        _updateUserProfile(data.result);\n        _userStatusNotify();\n        d.resolve(user);\n      }, function(r) {\n        //failure callback\n        ret = _parseErrorResponse(r.data|| r);\n        d.reject(ret);\n      });\n      return p;\n    }\n    function _forgotPassword(email) {\n      var ret = _defResult(), d = $q.defer(), p = d.promise;\n      email = email || '';\n      email = email.toLowerCase();\n      //basic validation check & user shouldn't be logged in\n      if(!email.length || user.isLoggedIn) {\n        $timeout(function() {\n          d.reject(ret);\n        }, 0);\n        return p;\n      }\n\n      $timeout(function() {\n        d.notify('Requesting for password reset');\n      }, 0);\n      //send Parse API request\n      Parse.save({object: 'requestPasswordReset', api: ''}, {\n        'email': email\n      }).$promise.then(function() {\n        //we get empty response here.\n        ret.sts = true;\n        d.resolve(ret);\n      }, function(r) {\n        ret = _parseErrorResponse(r.data || r);\n        d.reject(ret);\n      });\n      return p;\n    }\n\n    /*Facebook related handler*/\n    fbReady = Facebook.isReady();\n    //if FB is not loaded yet, let's monitor for it's status\n    if(!fbReady) {\n      var unbindFbWatch = $rootScope.$watch(function() {\n        return Facebook.isReady();\n      }, function(newVal) {\n        fbReady = newVal;\n        if(newVal) {\n          //FB SDK is loaded, we don't need to watch anymore\n          unbindFbWatch();\n        }\n      });\n    }\n\n    /* sample user object obtained from Facebook\n                      {\"id\":\"10153468797737360\",\"email\":\"marikanti@gmail.com\",\"first_name\":\"Hanumantha\",\"gender\":\"male\",\"last_name\":\"Marikanti\",\"link\":\"https://www.facebook.com/app_scoped_user_id/10153468797737360/\",\"locale\":\"en_US\",\"name\":\"Hanumantha Marikanti\",\"timezone\":6.5,\"updated_time\":\"2013-12-24T09:53:10+0000\",\"verified\":true}\n\n    */\n    /* Sample authResponse object obtained from Facebook\n            {\"accessToken\":\"CAAXMe67dkpkBAEeZBHv5glPY6R0TdXxOaIq6o72O1jutt1ojApsZAi590079na3pvP\",\"userID\":\"10153468797737360\",\"expiresIn\":6530,\"signedRequest\":\"B5p0vExqQxNXKhJlmV2SFF4ZlheUxUdWFPb2IsImlzcpZCI6IjEwMTUzNDY4Nzk3NzM3MzYwIn0\"}\"\n\n    */\n    //Note: angular-facebook provides $q promise for all FB APIs.\n    //But they work only if we pass a function. Since we want to handle\n    //response in promise callback, we need to pass dummy fn here (angular.noop)\n    var reqPermissions = ['email', 'public_profile'/*, 'user_about_me'*/],  //List of FB permission we need\n        fbAuthData = {};\n    function _fbPreLoginCheck(bValidate) {\n      bValidate = bValidate || false;\n\n      /*We will be validating cached response during login*/\n      if(bValidate && $.isEmptyObject(fbAuthData)) {\n        return $q.reject();\n      }\n      //empty previously stored fbAuthData\n      fbAuthData = {};\n\n      //Let's get Facebook login status\n      return Facebook.getLoginStatus(angular.noop).then(function(rData) {\n        $log.debug('On FB login status ' + JSON.stringify(rData));\n        if(rData.status === 'connected') {\n          fbAuthData = rData;\n          //user is loggedin to facebook and connected with our app\n          //Let's check whether we have necessary permissions\n          return Facebook.api('/me/permissions', angular.noop);\n        }\n\n        //User is not loggedin to facebook or our app is not connected yet\n        return $q.reject();\n      }).then(function(rData) {\n        //$log.debug('On permissions ' + JSON.stringify(rData));\n        //Let's check whether user granted all the permissions we require\n        var grantedPerms = $.map(rData.data, function(v) {\n          if(v.status === 'granted') {\n            return v.permission;\n          }\n        });\n\n        $log.debug('Granted perms ' + grantedPerms.join(','));\n        var bGranted = true;\n        $.each(reqPermissions, function(i, v) {\n          if(grantedPerms.indexOf(v) === -1) {\n            //we are missing one of the required permission\n            bGranted = false;\n          }\n        });\n        if(!bGranted) {\n          //reset the stored local data and go through FB login again\n          fbAuthData = {};\n          return $q.reject(false);\n        }\n        $q.resolve(fbAuthData);\n      });\n\n    }\n    function _fbLogin(bSignup) {\n      //if nothing passed, it's login request\n      bSignup = bSignup || false;\n      var ret = _defResult(), d = $q.defer(), p = d.promise;\n      //pre-check\n      //if user is already loggedin, ignore this\n      //FB SDK should've been loaded\n      if(user.oID.length || !fbReady) {\n        $timeout(function() {\n          d.reject(ret);\n        },0);\n        return p;\n      }\n\n      $timeout(function() {\n        d.notify((bSignup ? 'Signing up with Facebook' : 'Logging in with Facebook'));\n      }, 0);\n\n      _fbPreLoginCheck(true).then(function() {\n        //We have cached fbData & it's valid\n        return $q.resolve(fbAuthData);\n      }, function() {\n        var d = $q.defer(), p = d.promise;\n        //User is either not authenticated or doesn't have enough permission\n        Facebook.login(function(response) {\n          d.resolve(response);\n        },{\n          'scope': reqPermissions.join(','),\n          'return_scopes': true,\n          'auth_type': 'rerequest'\n        });\n        return p;\n      }).then(function(rData) {\n        //Successfully loggedin with FB and FB info available.\n        $log.debug('On FB successful Login ' + JSON.stringify(rData));\n        if(rData.status === 'unknown' || rData.authResponse === null ||rData.status === 'not_authorized' ) {\n          ret.msg = 'Unable to login with Facebook';\n          d.reject(ret);\n          return;\n        }\n        fbAuthData = rData;\n\n        //Let's communicate with parse and login/signup the user\n        //Format date & request object\n        //expires_in is expiration in seconds from now\n        /* jshint -W109,-W106 */\n        var o = {\n          facebook: {\n            id: rData.authResponse.userID,\n            id: rData.authResponse.email,\n            access_token: rData.authResponse.accessToken,\n            expiration_date: $filter('date')(Date.now() + rData.authResponse.expiresIn * 1000, \"yyyy-MM-ddTHH:mm:ss.sss'Z'\", 'GMT')\n          }\n        }, parseAPI = bSignup ? 'webFacebookSignUp' : 'webFacebookLogin';\n        /* jshint +W109,+W106 */\n\n        $log.debug('FB input object - ' + JSON.stringify(o));\n        return Parse.save({api : parseAPI}, o).$promise;\n      }).then(function(data) {\n\n        $log.debug('FB signup response ' + JSON.stringify(data));\n        if(angular.isUndefined(data) || angular.isUndefined(data.result) || data.result.status !== 'success') {\n          d.reject(ret);\n          return;\n        }\n        /*Update all user info*/\n        user.isFBUser = true;\n        _updateUserInfo(data.result);\n        ret.sts = true;\n        d.resolve(user);\n      }).catch(function(r) {\n        //Exception/error handler for all\n        $log.debug('On FB catchall ' + JSON.stringify(r));\n        ret = _parseErrorResponse(r.data || r);\n        d.reject(ret);\n      }).finally(function(){\n        //if we are reaching here, it's unexpected success/error handler\n        //We shouldn't use cached fbAuthData again\n        fbAuthData = {};\n        d.reject(ret);\n      }, function(s) {\n        //proxy the notification\n        if(angular.isString(s) && s.length) {\n          d.notify(s);\n        }\n      });\n\n      return p;\n    }\n\n\n    function _getCustomerList(handleSuccess, handleError) {\n\n       var ret = _defResult(), d = $q.defer();\n\n      if (!user.isLoggedIn) {\n        handleError('User not logged in..');\n        return;\n      }\n\n\n      if(customerList.length !== 0) {\n          handleSuccess(\"success\");\n          return;\n\n      }\n\n      $timeout(function() {\n        d.notify('Fetching contacts..');\n      }, 0);\n\n      var o = {\n        'parentId': user.oID\n\n      };\n\n      //send ajax form submission\n      Parse.save({api: 'getCustomers'}, o).$promise.then(function(data){\n        $log.debug('get customer response ' + JSON.stringify(data));\n        if(angular.isUndefined(data.result) || data.result.status !== 'success') {\n            handleError(data.result);\n        }\n        /*Update all user info*/\n\n        data.result.customers.forEach(function(customer) {\n            customerList.push(customer);\n\n        });\n\n        handleSuccess(\"success\");\n\n\n\n      }).catch(function(r){\n\n        handleError(r);\n\n      }).finally(function(){\n\n      });\n\n    }\n\n\n    function _saveContact(objectId, parentId, email, mobile, username, service_name, actions) {\n      email = email || '';\n      mobile = mobile || '';\n      email = email.toLowerCase();\n      username = username || '';\n      objectId = objectId || '';\n\n      var ret = _defResult(), d = $q.defer();\n\n      //Basic validation\n      if(!email.length || !username.length || !mobile.length ) { //|| !parentId.length) {\n        ret.msg = 'Invalid Input!';\n        //reject via timeout for indicator to receive rejection\n        $timeout(function() {\n          d.reject(ret);\n        }, 0);\n        return d.promise;\n      }\n\n      //Perform email & mobile validation\n      $timeout(function() {\n        d.notify('Saving Contact ');\n      },0);\n\n        var o = {\n          'objectId':objectId || '',\n          'parentId':parentId,\n          'email' : email,\n          'mobile': mobile,\n          'username' : username,\n          'service' : service_name\n\n        };\n\n\n        Parse.save({api: 'saveContact'}, o).$promise.then(function(data){\n            $log.debug('Save Contact response ' + JSON.stringify(data));\n            if(angular.isUndefined(data.result) || data.result.status !== 'success') {\n                d.reject(ret);\n            }\n            /*Update all user info*/\n            if(!objectId.length) {\n                customerList.push(data.result.customer);\n            }\n            //save actions\n            actions.forEach(function(action) {\n\n                var dom, service, frequency;\n                console.log('saving action ..' + action.objectId);\n                if(action.dom.id === 0) {\n                    dom = '1';\n                }\n\n                if(action.service.id === 0 ) {\n\n                    service = 'OTHER SUBSCRIPTIONS';\n                }\n\n                if(action.frequency.id === 0) {\n                    frequency = 'monthly';\n                }\n\n                var a = {\n                    'objectId' : action.objectId,\n                    'parentId' : data.result.customer.objectId,\n                    'name' : action.action_name,\n                    'email' : action.action_email ? 'true' : 'false',\n                    'sms' : action.action_sms ? 'true' : 'false',\n                    'voice' : action.action_voice ? 'true' : 'false',\n                    'action_text': action.action_text,\n                    'start': action.start,\n                    'end': action.end,\n                    'service' : action.service.name,\n                    'dom' : action.dom.name,\n                    'frequency' : action.frequency.name,\n                    'runonsave' : 'false'\n\n                };\n               console.log(a);\n               Parse.save({api: 'saveAction'}, a).$promise.then(function(data){\n                   $log.debug('after save action' + JSON.stringify(data));\n\n               }).catch(function(r){\n                   console.log('Unable save action'+ r.data);\n\n               });\n            });\n\n            ret.sts = true;\n            d.resolve(user);\n      }).catch(function(r){\n        ret = _parseErrorResponse(r.data||r);\n        d.reject(ret);\n      }).finally(function(){\n        d.reject(ret);\n      }, function(s) {\n        //proxy the notification\n        if(angular.isString(s) && s.length) {\n          d.notify(s);\n        }\n      });\n\n      //always return deferred object\n      return d.promise;\n\n\n    }\n\n\n    function _importCSV(parentId, fileContent) {\n      parentId = parentId || '';\n      fileContent = fileContent || '';\n\n      var ret = _defResult(), d = $q.defer();\n      $log.debug('Before import ' + parentId +  fileContent);\n      //Basic validation\n      if(!parentId.length ) {\n        ret.msg = 'Invalid Input!';\n        //reject via timeout for indicator to receive rejection\n        $timeout(function() {\n          d.reject(ret);\n        }, 0);\n        return d.promise;\n      }\n\n      //Perform email & mobile validation\n      $timeout(function() {\n        d.notify('Importing');\n      },0);\n\n        var lines = fileContent.split(\"\\n\");\n        lines.forEach(function(line) {\n           var fields = line.split(\",\");\n\n                var o = {\n                      'parentId':parentId,\n                      'email' : fields[1],\n                      'mobile': fields[2],\n                      'username' : fields[0],\n                      'service' : fields[3]\n\n                };\n\n                Parse.save({api: 'saveContact'}, o).$promise.then(function(data){\n                    $log.debug('Save Contact response ' + JSON.stringify(data));\n                    if(angular.isUndefined(data.result) || data.result.status !== 'success') {\n                        d.reject(ret);\n                    }\n                    /*Update all user info*/\n                    customerList.push(data.result.customer);\n\n                    ret.sts = true;\n                    d.resolve(user);\n                    }).catch(function(r){\n                        ret = _parseErrorResponse(r.data||r);\n                        d.reject(ret);\n                    }).finally(function(){\n                        d.reject(ret);\n                    }, function(s) {\n                    //proxy the notification\n                    if(angular.isString(s) && s.length) {\n                      d.notify(s);\n                    }\n                });\n\n\n        });\n\n        //always return deferred object\n      return d.promise;\n\n\n    }\n\n    function _setSelectedContact (contact) {\n\n        //angular.merge(selectedContact, contact);\n        for(var key in contact) {\n         selectedContact[key] = contact[key];\n        }\n        console.log(\"selectd \" + selectedContact.email);\n    }\n\n\n    function _getSelectedContact () {\n\n        return selectedContact;\n\n    }\n\n    function _removeContact(contact) {\n\n        console.log('removing contact ' + contact.objectId);\n\n        //normalize input\n        var objectId = contact.objectId || '';\n\n        var ret = _defResult(), d = $q.defer();\n\n        //input validation\n        //validation as per rule, should be done in the controller. We do\n        //minimum empty check here.\n        if(!objectId.length) {\n            ret.msg = 'Invalid input!';\n            //reject via timeout for indicator to receive rejection\n            $timeout(function() {\n                d.reject(ret);\n            }, 0);\n            return d.promise;\n        }\n\n        var o = {\n            'customerId': objectId\n        };\n\n        //send ajax form submission\n        Parse.save({api: 'deleteCustomer'}, o).$promise.then(function(data){\n            $log.debug(' response ' + JSON.stringify(data));\n            if(angular.isUndefined(data.result) || data.result.status !== 'success') {\n              d.reject(ret);\n            }\n            /*Update all user info*/\n\n            ret.sts = true;\n            d.resolve(user);\n          }).catch(function(r){\n            ret = _parseErrorResponse(r.data||r);\n            d.reject(ret);\n          }).finally(function(){\n            d.reject(ret);\n          }, function(s) {\n            //proxy the notification\n            if(angular.isString(s) && s.length) {\n              d.notify(s);\n            }\n          });\n\n          //always return deferred object\n          return d.promise;\n\n\n    }\n\n\n    function _getActions(parentId) {\n        console.log('getiing action for ' + parentId);\n\n        //normalize input\n        var parentId = parentId || '';\n\n        var ret = _defResult(), d = $q.defer();\n\n        if(!parentId.length) {\n            ret.msg = 'Invalid input!';\n            //reject via timeout for indicator to receive rejection\n            $timeout(function() {\n            d.reject(ret);\n            }, 0);\n            return d.promise;\n        }\n        var o = {\n            'parentId': parentId\n        };\n\n        Parse.save({api: 'getActions'}, o).$promise.then(function(data){\n            $log.debug(' response ' + JSON.stringify(data));\n\n            if(angular.isUndefined(data.result)) {\n              d.reject(ret);\n            }\n            ret.sts = true;\n            d.resolve(data.result);\n          }).catch(function(r){\n            ret = _parseErrorResponse(r.data||r);\n            d.reject(ret);\n          }).finally(function(){\n            d.reject(ret);\n          }, function(s) {\n            //proxy the notification\n            if(angular.isString(s) && s.length) {\n              d.notify(s);\n            }\n          });\n\n          //always return deferred object\n          return d.promise;\n    }\n\n\n    function _removeAction(objectId) {\n        console.log('removing action for ' + objectId);\n\n        //normalize input\n        var objectId = objectId || '';\n\n        var ret = _defResult(), d = $q.defer();\n\n        if(!objectId.length) {\n            ret.msg = 'Invalid input!';\n            //reject via timeout for indicator to receive rejection\n            $timeout(function() {\n            d.reject(ret);\n            }, 0);\n            return d.promise;\n        }\n        var o = {\n            'objectId': objectId\n        };\n\n        Parse.save({api: 'removeAction'}, o).$promise.then(function(data){\n            $log.debug(' response ' + JSON.stringify(data));\n\n            if(angular.isUndefined(data.result)) {\n              d.reject(ret);\n            }\n            ret.sts = true;\n            d.resolve(data.result);\n          }).catch(function(r){\n            ret = _parseErrorResponse(r.data||r);\n            d.reject(ret);\n          }).finally(function(){\n            d.reject(ret);\n          }, function(s) {\n            //proxy the notification\n            if(angular.isString(s) && s.length) {\n              d.notify(s);\n            }\n          });\n\n          //always return deferred object\n          return d.promise;\n    }\n\n\n    function _saveSysAction (objectId, parentId, actions) {\n\n        var parentId = parentId || '';\n        var ret = _defResult(), d = $q.defer();\n\n        //Basic validation\n        if(!parentId.length ) { //|| !parentId.length) {\n            ret.msg = 'Invalid Input!';\n            //reject via timeout for indicator to receive rejection\n            $timeout(function() {\n              d.reject(ret);\n            }, 0);\n            return d.promise;\n        }\n\n        //Perform email & mobile validation\n        $timeout(function() {\n            d.notify('Saving Action.. ');\n        },0);\n\n\n        actions.forEach(function(action) {\n\n            var dom, service, frequency;\n            console.log('saving action ..' + action.objectId);\n            if(action.dom.id === 0) {\n                    dom = '1';\n            }\n\n            if(action.service.id === 0 ) {\n\n                service = 'OTHER SUBSCRIPTIONS';\n             }\n\n            if(action.frequency.id === 0) {\n                frequency = 'monthly';\n            }\n\n            var a = {\n                'objectId' : action.objectId,\n                'parentId' : parentId,\n                'name' : action.action_name,\n                'email' : action.action_email ? 'true' : 'false',\n                'sms' : action.action_sms ? 'true' : 'false',\n                'voice' : action.action_voice ? 'true' : 'false',\n                'action_text': action.action_text,\n                'start': action.start,\n                'end': action.end,\n                'service' : action.service.name,\n                'dom' : action.dom.name,\n                'frequency' : action.frequency.name,\n                'runonsave' : 'false'\n\n            };\n            console.log(a);\n            Parse.save({api: 'saveAction'}, a).$promise.then(function(data){\n                $log.debug('after save action' + JSON.stringify(data));\n\n                systemActionList.push(data.result.action);\n\n            }).catch(function(r){\n                console.log('Unable save action'+ r.data);\n\n            });\n        });\n\n        ret.sts = true;\n        d.resolve(user);\n\n\n        //always return deferred object\n        return d.promise;\n\n\n\n\n    }\n\n\n    function _getSystemActionList(handleSuccess, handleError) {\n\n\n\n      var ret = _defResult(), d = $q.defer();\n      console.log('Fetching system actions.. for ' + user.oID);\n\n      if (!user.isLoggedIn) {\n\n        handleError('User not logged in..');\n        return;\n      }\n\n\n      if(systemActionList.length !== 0) {\n          handleSuccess(\"success\");\n          return;\n\n      }\n\n      $timeout(function() {\n        d.notify('Fetching system actions..');\n      }, 0);\n\n      console.log('Fetching system actions.. for ' + user.oID);\n      var o = {\n        'parentId': user.oID\n\n      };\n\n      //send ajax form submission\n      Parse.save({api: 'getActions'}, o).$promise.then(function(data){\n\n        $log.debug('get actions response ' + JSON.stringify(data));\n        if(angular.isUndefined(data.result) || data.result.status !== 'success') {\n            handleError(data.result);\n        }\n        /*Update all user info*/\n\n        data.result.actions.forEach(function(sysAction) {\n            systemActionList.push(sysAction);\n\n        });\n\n        handleSuccess(\"success\");\n\n\n\n      }).catch(function(r){\n\n        handleError(r);\n\n      }).finally(function(){\n\n      });\n\n    }\n\n\n\n\n    return {\n      isLoggedIn: function() { return user.isLoggedIn; },\n      isFBReady: function() { return fbReady;},\n      getSessionToken: function() { return user.sToken;},\n      getUser: function() {return user;},\n      getCustomers: function() {return customerList;},\n      getSystemActions: function() {return systemActionList;},\n      signup: _signup,\n      login: _login,\n      fbLogin: _fbLogin,\n      fbPreLoginCheck: _fbPreLoginCheck,\n      signout: _signout,\n      fetchUserProfile: _fetchUserProfile,\n      forgotPassword: _forgotPassword,\n      updateUserInfo: _updateUserInfo,\n      parseErrorResponse: _parseErrorResponse,\n      getCustomerList: _getCustomerList,\n      getSystemActionList : _getSystemActionList,\n      saveContact: _saveContact,\n      importCSV: _importCSV,\n      setSelectedContact: _setSelectedContact,\n      getSelectedContact: _getSelectedContact,\n      removeContact: _removeContact,\n      getActions: _getActions,\n      removeAction: _removeAction,\n      saveSysAction: _saveSysAction,\n    };\n\n\n\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:CustomerListCtrl\n * @description\n * # CustomerListCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('CustomerListCtrl', ['$scope', 'userService', '$log', '$location', function ($scope, userService, $log, $location) {\n\n    $scope.customers = [];\n\n    var handleError = function (error) {\n    // TODO: Error messaging\n    $scope.noGcMsg = \"There are currently no customer associated with you. Please try again later.\";\n    $log.debug(\"get customer list failed\"+ error);\n    };\n\n  var handleSuccess = function (data) {\n\n    $scope.customers = userService.getCustomers();\n\n   /* data.forEach(function(customer) {\n\n        $scope.customers.push(customer);\n        $log.debug(\"customer \" + customer.email);\n\n    });\n   */\n\n\n\n\n  };\n\n\n  $scope.removeContact = function (contact) {\n      alert(\"Are you sure !!\" + contact.email);\n      //userService.setSelectedContact(contact);\n      //userService.removeContact(contact);\n\n      $scope.lPromise = userService.removeContact(contact);\n      $scope.lPromise.then(function(u) {\n        //success callback\n        $log.debug('Removed  ' + JSON.stringify(u));\n\n        $scope.customers.forEach(function(customer) {\n\n          if(customer.objectId == contact.objectId) {\n              $scope.customers.pop(customer);\n              $scope.apply;\n          }\n\n        });\n\n\n      }, function(r) {\n          //error callback\n        $log.debug('Unable to remove contact ' + JSON.stringify(r));\n        $scope.errMsg = r.msg;\n        //on failure reset the captcha widget as it can't be re-used\n\n      }, function(s) {\n        $scope.lMessage = s;\n      }).finally(function() {\n        //google recaptcha causes input element\n        //in IE not to display any updated text.\n        //setting focus() seems to fix this issue\n\n      });\n\n\n\n  }\n\n\n  $scope.editContact = function(contact) {\n\n      userService.setSelectedContact(contact);\n\n      $location.path('/edit-contact');\n  }\n\n  userService.getCustomerList(handleSuccess, handleError);\n\n  $scope.go = function (path) {\n    $location.path( path );\n  }\n\n  $scope.filterCardsBySearch = function(){\n    $scope.filterCards();\n    var query = $scope.query;\n    var filteredmerchantCardsList = [];\n    if ( query && query !== '' ) {\n      $.each($scope.filteredCards, function (i, item) {\n        var storeName = item.merchantName.toLowerCase();\n        if (storeName.indexOf(query.toLowerCase()) === 0) {\n          filteredmerchantCardsList.push(item);\n        }\n      });\n\n      $scope.filteredCards = filteredmerchantCardsList;\n      $scope.searchResults = filteredmerchantCardsList.length;\n    }\n  };\n\n\n\n\n\n  $scope.importCSV = function (file) {\n    console.log(\"File uploaded\");\n  }\n\n\n\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:EditContactCtrl\n * @description\n * # EditContactCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('EditContactCtrl',  ['$scope', '$window', '$location', '$log', 'userService', 'Facebook', 'configuration',\n    function($scope, $window, $location, $log, userService, Facebook, Config) {\n\n\n    $scope.service_list = [\n\n      {id:0, name:'Select Service' },\n      {id:1, name:'GYM'},\n      {id:2, name:'EDUCATION'},\n      {id:3, name:'MOTOR SERVICE'},\n      {id:4, name:'INSURANCE'},\n      {id:5, name:'LEGAL'},\n      {id:6, name:'COMMUNITY'},\n      {id:7, name:'MEDICAL'},\n      {id:8, name:'DIAGNOSTIC CENTER'},\n      {id:9, name:'HOME'},\n      {id:10, name:'CABLE/INTERNET SERVICE'},\n      {id:11, name:'OTHER SUBSCRIPTIONS'},\n\n    ];\n\n    $scope.periods = [\n\n\n      {id:0, name:'Select frequency'},\n      {id:1, name:'monthly'},\n      {id:2, name:'weekly'},\n      {id:3, name:'daily'},\n      {id:4, name:'annual'},\n      {id:5, name:'semi-annual'},\n      {id:6, name:'quarterly'},\n      {id:7, name:'bi-monthly'},\n      {id:8, name:'bi-weekly'},\n      {id:9, name:'onetime'},\n\n\n    ];\n\n\n    $scope.doms = [\n\n      {id:0, name:'Select Run Day of month'},\n      {id:1, name:'1'},\n      {id:2, name:'2'},\n      {id:3, name:'3'},\n      {id:4, name:'4'},\n      {id:5, name:'5'},\n      {id:6, name:'6'},\n      {id:7, name:'7'},\n      {id:8, name:'8'},\n      {id:9, name:'9'},\n      {id:10, name:'10'},\n      {id:11, name:'11'},\n      {id:12, name:'12'},\n      {id:13, name:'13'},\n      {id:14, name:'14'},\n      {id:15, name:'15'},\n      {id:16, name:'16'},\n      {id:17, name:'17'},\n      {id:18, name:'18'},\n      {id:19, name:'19'},\n      {id:20, name:'20'},\n      {id:21, name:'21'},\n      {id:22, name:'22'},\n      {id:23, name:'23'},\n      {id:24, name:'24'},\n      {id:25, name:'25'},\n      {id:26, name:'26'},\n      {id:27, name:'27'},\n      {id:28, name:'28'},\n      {id:29, name:'29'},\n      {id:30, name:'30'},\n      {id:31, name:'31'},\n\n\n    ];\n\n\n\n    $scope.actions = [];\n    $scope.actionCount = 0;\n\n    var user = userService.getUser();\n    $scope.rootUser = user;\n\n\n    if(!user) {\n        $location.path(\"/login\");\n\n    }\n\n\n    $scope.service = $scope.service_list[0];\n    $scope.frequency = $scope.periods[0];\n    $scope.selectedContact = userService.getSelectedContact();\n\n    if($scope.selectedContact) {\n        console.log($scope.selectedContact.email + ' is selected for edit');\n\n        $scope.name = $scope.selectedContact.name;\n        $scope.email = $scope.selectedContact.email;\n        $scope.mobile = $scope.selectedContact.mobile;\n        $scope.service_list.forEach(function(service) {\n            if(service.name ==    $scope.selectedContact.service) {\n                $scope.service = $scope.service_list[service.id];\n            }\n        });\n\n        $scope.objectId = $scope.selectedContact.objectId;\n        //any actions\n\n        $scope.lPromise = userService.getActions($scope.selectedContact.objectId);\n        $scope.lPromise.then(function(result) {\n        //success callback\n            $log.debug('After save ' + JSON.stringify(result));\n\n            result.actions.forEach(function(actionr) {\n                console.log(\"action details ..\" + actionr.actionfrequency)\n                var action  = {};\n\n                action.id = $scope.actionCount++;\n                action.objectId = actionr.objectId;\n                action.action_email = (actionr.email == 'true' ) ? true : false;\n                action.action_sms = (actionr.sms == 'true' ) ? true : false;\n                action.action_voice = (actionr.voice == 'true' ) ? true : false;\n                action.action_name = actionr.actionname;\n                action.action_text = actionr.content;\n\n                $scope.doms.forEach(function(dom) {\n                    if(dom.name ==   actionr.dom) {\n\n                        action.dom = $scope.doms[dom.id];\n                    }\n                });\n\n                $scope.service_list.forEach(function(service) {\n                    if(service.name ==    actionr.service) {\n                        action.service = $scope.service_list[service.id];\n                    }\n                });\n\n                $scope.periods.forEach(function(period) {\n                    if(period.name ==    actionr.actionfrequency) {\n                        action.frequency = $scope.periods[period.id];\n                    }\n                });\n\n\n\n                action.start = actionr.actionsince;\n                action.end = actionr.actionuntil;\n                $scope.actions.push(action);\n\n            });\n\n\n      }, function(r) {\n          //error callback\n        $log.debug('unable to fetch actions ' + JSON.stringify(r));\n        $scope.errMsg = r.msg;\n        //on failure reset the captcha widget as it can't be re-used\n\n      }, function(s) {\n        $scope.lMessage = s;\n      }).finally(function() {\n\n\n      });\n\n\n\n\n        //$scope.$apply;\n\n    }\n\n\n\n    $scope.add = function () {\n          $scope.actionCount++;\n          var action  = {};\n          action.id = $scope.actionCount;\n          action.dom = $scope.doms[0];\n          action.service = $scope.service_list[0];\n          action.frequency = $scope.periods[0];\n          //action.start = new Date();\n\n          $scope.actions.push(action);\n\n    };\n\n\n    $scope.remove = function (actionr) {\n\n        alert('This action will be removed permanently OK ?');\n        console.log('Removing action' + actionr.id);\n\n\n        $scope.actions.forEach(function(action) {\n\n            if(action.id == actionr.id) {\n                $scope.lPromise = userService.removeAction(actionr.objectId);\n\n                $scope.lPromise.then(function(u) {\n                    //success callback\n                    $log.debug('After save ' + JSON.stringify(u));\n                    $scope.actions.pop(actionr);\n\n\n                }, function(r) {\n                    //error callback\n                    $log.debug('unable remove action failed ' + JSON.stringify(r));\n                    $scope.errMsg = r.msg;\n\n\n                }, function(s) {\n                    $scope.lMessage = s;\n                }).finally(function() {\n\n\n                });\n\n\n\n            }\n\n        });\n\n    };\n\n    $scope.submitForm = function() {\n\n        if(!$scope.rootUser.oID.length) {\n            $location.path(\"/login\");\n\n        }\n      //clear the error message first\n      $scope.errMsg = '';\n      $scope.lMessage = '';\n      //get captcha response\n      var captchaValue = '';\n      $log.debug('Before Save ' + $scope.email, $scope.mobile, $scope.service.name);\n\n      $scope.lPromise = userService.saveContact($scope.objectId, $scope.rootUser.oID, $scope.email, $scope.mobile, $scope.name, $scope.service.name, $scope.actions);\n\n      $scope.lPromise.then(function(u) {\n        //success callback\n        $log.debug('After save ' + JSON.stringify(u));\n\n        $location.path('/customer-list');\n      }, function(r) {\n          //error callback\n        $log.debug('add contact failed ' + JSON.stringify(r));\n        $scope.errMsg = r.msg;\n        //on failure reset the captcha widget as it can't be re-used\n\n      }, function(s) {\n        $scope.lMessage = s;\n      }).finally(function() {\n        //google recaptcha causes input element\n        //in IE not to display any updated text.\n        //setting focus() seems to fix this issue\n\n      });\n\n\n    };\n\n\n\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:ImportFileCtrl\n * @description\n * # ImportFileCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('ImportFileCtrl', ['$scope', '$window', '$location', '$log', 'userService', 'Facebook', 'configuration',\n    function($scope, $window, $location, $log, userService, Facebook, Config) {\n    \n    //$scope.fileContent = '';\n        \n    var user = userService.getUser();\n    $scope.rootUser = user;\n    if(!$scope.rootUser) {\n        $location.path(\"/login\");\n        \n    }\n    \n    $scope.uploadFile = function () {\n        \n      $log.debug(\"My File importing\");\n       \n      $scope.errMsg = '';\n      $scope.lMessage = '';\n      //get captcha response\n      var captchaValue = '';\n      $log.debug('Before Save ' + $scope.rootUser.oID +  $scope.fileContent);\n      $scope.lPromise = userService.importCSV($scope.rootUser.oID, $scope.fileContent);\n        \n      $scope.lPromise.then(function(u) {\n        //success callback\n        $log.debug('After save ' + JSON.stringify(u));\n\n        $location.path('/customer-list');\n      }, function(r) {\n          //error callback\n        $log.debug('add contact failed ' + JSON.stringify(r));\n        $scope.errMsg = r.msg;\n        //on failure reset the captcha widget as it can't be re-used\n       \n      }, function(s) {\n        $scope.lMessage = s;\n      }).finally(function() {\n        //google recaptcha causes input element\n        //in IE not to display any updated text.\n        //setting focus() seems to fix this issue\n        $window.jQuery('input:first').focus();\n      });\n       \n        \n        \n    }\n\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc directive\n * @name freeminderApp.directive:fileReader\n * @description\n * # fileReader\n */\nangular.module('freeminderApp')\n  .directive('fileReader', function () {\n    \n      return {\n    scope: {\n      fileReader:\"=\"\n    },\n    link: function(scope, element) {\n      $(element).on('change', function(changeEvent) {\n        var files = changeEvent.target.files;\n        if (files.length) {\n          var r = new FileReader();\n          r.onload = function(e) {\n              var contents = e.target.result;\n              scope.$apply(function () {\n                scope.fileReader = contents;\n              });\n          };\n          \n          r.readAsText(files[0]);\n        }\n      });\n    }\n  };\n\n  });\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:AddActionCtrl\n * @description\n * # AddActionCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('AddActionCtrl', function () {\n    this.awesomeThings = [\n      'HTML5 Boilerplate',\n      'AngularJS',\n      'Karma'\n    ];\n  });\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:NewContactCtrl\n * @description\n * # NewContactCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('NewContactCtrl',  ['$scope', '$window', '$location', '$log', 'userService', 'Facebook', 'configuration',\n    function($scope, $window, $location, $log, userService, Facebook, Config) {\n \n         \n    $scope.service_list = [\n    \n      {id:0, name:'Select Service' },\n      {id:1, name:'GYM'},\n      {id:2, name:'EDUCATION'},\n      {id:3, name:'MOTOR SERVICE'},\n      {id:4, name:'INSURANCE'},\n      {id:5, name:'LEGAL'},\n      {id:6, name:'COMMUNITY'},\n      {id:7, name:'MEDICAL'},\n      {id:8, name:'DIAGNOSTIC CENTER'},\n      {id:9, name:'HOME'},\n      {id:10, name:'CABLE/INTERNET SERVICE'},\n      {id:11, name:'OTHER SUBSCRIPTIONS'},\n   \n    ];\n        \n    $scope.periods = [\n        \n        \n      {id:0, name:'Select frequency'},\n      {id:1, name:'monthly'},\n      {id:2, name:'weekly'},\n      {id:3, name:'daily'},\n      {id:4, name:'annual'},\n      {id:5, name:'semi-annual'},\n      {id:6, name:'quarterly'},\n      {id:7, name:'bi-monthly'},\n      {id:8, name:'bi-weekly'},\n      {id:9, name:'onetime'},\n        \n     \n    ];\n    \n        \n    $scope.doms = [\n    \n      {id:0, name:'Select Run Day of month'},\n      {id:1, name:'1'},\n      {id:2, name:'2'},\n      {id:3, name:'3'},\n      {id:4, name:'4'},\n      {id:5, name:'5'},\n      {id:6, name:'6'},\n      {id:7, name:'7'},\n      {id:8, name:'8'},\n      {id:9, name:'9'},\n      {id:10, name:'10'},\n      {id:11, name:'11'},\n      {id:12, name:'12'},\n      {id:13, name:'13'},\n      {id:14, name:'14'},\n      {id:15, name:'15'},\n      {id:16, name:'16'},\n      {id:17, name:'17'},\n      {id:18, name:'18'},\n      {id:19, name:'19'},\n      {id:20, name:'20'},\n      {id:21, name:'21'},\n      {id:22, name:'22'},\n      {id:23, name:'23'},\n      {id:24, name:'24'},\n      {id:25, name:'25'},\n      {id:26, name:'26'},\n      {id:27, name:'27'},\n      {id:28, name:'28'},\n      {id:29, name:'29'},\n      {id:30, name:'30'},\n      {id:31, name:'31'},\n    \n     \n    ];\n       \n        \n          \n    $scope.actions = [];\n    $scope.actionCount = 0;\n    \n    var user = userService.getUser();\n    $scope.rootUser = user;\n        \n        \n    if(!user) {\n        $location.path(\"/login\");\n        \n    }\n    \n    \n    $scope.service = $scope.service_list[0];\n    $scope.frequency = $scope.periods[0];\n    \n  \n  \n\n    $scope.add = function () {\n          $scope.actionCount++;\n          var action  = {};\n          action.id = $scope.actionCount;\n          action.dom = $scope.doms[0];\n          action.service = $scope.service_list[0];\n          action.frequency = $scope.periods[0];\n          action.start = new Date();\n        \n          $scope.actions.push(action);\n          \n    };\n        \n        \n    $scope.remove = function (actionId) {\n     \n            console.log('Removing action' + actionId); \n            \n            $scope.actions.forEach(function(action) {\n             \n                if(action.id == actionId) {\n                    $scope.actions.pop(action);\n                    \n                }\n                \n            });\n      \n    };\n        \n    $scope.submitForm = function() {\n        \n        if(!$scope.rootUser.oID.length) {\n            $location.path(\"/login\");\n        \n        }\n      //clear the error message first\n      $scope.errMsg = '';\n      $scope.lMessage = '';\n      //get captcha response\n      var captchaValue = '';\n      $log.debug('Before Save ' + $scope.email, $scope.mobile, $scope.service.name );\n        \n      $scope.lPromise = userService.saveContact($scope.objectId, $scope.rootUser.oID, $scope.email, $scope.mobile, $scope.name, $scope.service.name, $scope.actions);\n        \n      $scope.lPromise.then(function(u) {\n        //success callback\n        $log.debug('After save ' + JSON.stringify(u));\n       \n        $location.path('/customer-list');\n      }, function(r) {\n          //error callback\n        $log.debug('add contact failed ' + JSON.stringify(r));\n        $scope.errMsg = r.msg;\n        //on failure reset the captcha widget as it can't be re-used\n       \n      }, function(s) {\n        $scope.lMessage = s;\n      }).finally(function() {\n        //google recaptcha causes input element\n        //in IE not to display any updated text.\n        //setting focus() seems to fix this issue\n        $window.jQuery('input:first').focus();\n      });\n        \n     \n    };\n    \n    \n    \n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:FooterCtrl\n * @description\n * # FooterCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('FooterCtrl', ['$scope', '$rootScope', '$location', 'configuration', function ($scope, $rootScope, $location, config) {\n    $scope.footerClass = 'no-footer-navbar';\n    $scope.footerVersion = config.clientVersion;\n    $scope.cuurentYear = new Date().getFullYear();\n\n  function _UpdateFooterMode() {\n    var noFooterViews = ['/forgotpassword', '/login', '/signup'],\n        noAppViews = ['/main', '/download/', '/'],\n        view = $location.path();\n    //set required class based on active view\n    if( noFooterViews.indexOf(view) !== -1 ) {\n      $scope.footerClass = 'no-footer-navbar';\n    } else if(noAppViews.indexOf(view) !== -1) {\n      $scope.footerClass = 'noapp-footer-navbar';\n    }else {\n      $scope.footerClass = '';\n    }\n\n    //On download page, we need footer to have white background\n    if(view.indexOf('/download') !== -1) {\n      $scope.footerClass = $scope.footerClass + ' whitebg-footer-navbar';\n    }\n  }\n  //Use rootscope to hide navbar (top & bottom) drop-down to collapse on navigation\n  //since this is ajax navigation\n  $rootScope.$on('$routeChangeSuccess', function() {\n    _UpdateFooterMode();\n  });\n\n  }]);\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:LeftnavCtrl\n * @description\n * # LeftnavCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('LeftnavCtrl',  ['$scope', '$log', '$location', 'userService', function ($scope, $log, $location, userService) {\n    $scope.isLoggedIn = userService.isLoggedIn();\n\n    var user = userService.getUser();\n    $scope.name = user.firstName || user.lastName || '';\n    $scope.image = user.profilePic;\n    $scope.initials = user.initials;\n\n    //Watch for event when user info updated and update the above variables.\n    $scope.$on('user:updated', function() {\n      $scope.name = user.firstName || user.lastName || '';\n      $scope.image = user.profilePic;\n      $scope.initials = user.initials;\n    });\n\n    $scope.signout = function(){\n      //signout the user\n      userService.signout().finally(function() {\n        //we don't need to worry whether it's success or failure\n        //$log.debug('After logging out ' + JSON.stringify(userService.getUser()));\n        $location.path('/shop');\n      });\n      return false;\n    };\n\n  }]);\n\n\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:SystemActionCtrl\n * @description\n * # SystemActionCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('SystemActionCtrl', ['$scope', '$window', '$location', '$log', 'userService', 'Facebook', 'configuration',\n    function($scope, $window, $location, $log, userService, Facebook, Config) {\n \n         \n    $scope.service_list = [\n    \n      {id:0, name:'Select Service' },\n      {id:1, name:'GYM'},\n      {id:2, name:'EDUCATION'},\n      {id:3, name:'MOTOR SERVICE'},\n      {id:4, name:'INSURANCE'},\n      {id:5, name:'LEGAL'},\n      {id:6, name:'COMMUNITY'},\n      {id:7, name:'MEDICAL'},\n      {id:8, name:'DIAGNOSTIC CENTER'},\n      {id:9, name:'HOME'},\n      {id:10, name:'CABLE/INTERNET SERVICE'},\n      {id:11, name:'OTHER SUBSCRIPTIONS'},\n   \n    ];\n        \n    $scope.periods = [\n        \n        \n      {id:0, name:'Select frequency'},\n      {id:1, name:'monthly'},\n      {id:2, name:'weekly'},\n      {id:3, name:'daily'},\n      {id:4, name:'annual'},\n      {id:5, name:'semi-annual'},\n      {id:6, name:'quarterly'},\n      {id:7, name:'bi-monthly'},\n      {id:8, name:'bi-weekly'},\n      {id:9, name:'onetime'},\n        \n     \n    ];\n    \n        \n    $scope.doms = [\n    \n      {id:0, name:'Select Run Day of month'},\n      {id:1, name:'1'},\n      {id:2, name:'2'},\n      {id:3, name:'3'},\n      {id:4, name:'4'},\n      {id:5, name:'5'},\n      {id:6, name:'6'},\n      {id:7, name:'7'},\n      {id:8, name:'8'},\n      {id:9, name:'9'},\n      {id:10, name:'10'},\n      {id:11, name:'11'},\n      {id:12, name:'12'},\n      {id:13, name:'13'},\n      {id:14, name:'14'},\n      {id:15, name:'15'},\n      {id:16, name:'16'},\n      {id:17, name:'17'},\n      {id:18, name:'18'},\n      {id:19, name:'19'},\n      {id:20, name:'20'},\n      {id:21, name:'21'},\n      {id:22, name:'22'},\n      {id:23, name:'23'},\n      {id:24, name:'24'},\n      {id:25, name:'25'},\n      {id:26, name:'26'},\n      {id:27, name:'27'},\n      {id:28, name:'28'},\n      {id:29, name:'29'},\n      {id:30, name:'30'},\n      {id:31, name:'31'},\n    \n     \n    ];\n       \n        \n          \n    $scope.actions = [];\n    $scope.actionCount = 0;\n    \n    var user = userService.getUser();\n    $scope.rootUser = user;\n        \n        \n    if(!user) {\n        $location.path(\"/login\");\n        \n    }\n    \n    \n    $scope.service = $scope.service_list[0];\n    $scope.frequency = $scope.periods[0];\n    \n  \n  \n\n    $scope.add = function () {\n          $scope.actionCount++;\n          var action  = {};\n          action.id = $scope.actionCount;\n          action.dom = $scope.doms[0];\n          action.service = $scope.service_list[0];\n          action.frequency = $scope.periods[0];\n          action.start = new Date();\n        \n          $scope.actions.push(action);\n          \n    };\n        \n        \n    $scope.remove = function (actionId) {\n     \n            console.log('Removing action' + actionId); \n            \n            $scope.actions.forEach(function(action) {\n             \n                if(action.id == actionId) {\n                    $scope.actions.pop(action);\n                    \n                }\n                \n            });\n      \n    };\n        \n    $scope.submitForm = function() {\n        \n        if(!$scope.rootUser.oID.length) {\n            $location.path(\"/login\");\n        \n        }\n      //clear the error message first\n      $scope.errMsg = '';\n      $scope.lMessage = '';\n      //get captcha response\n      var captchaValue = '';\n      $log.debug('Before Save '  );\n        \n      $scope.lPromise = userService.saveSysAction($scope.objectId, $scope.rootUser.oID, $scope.actions);\n        \n      $scope.lPromise.then(function(u) {\n        //success callback\n        $log.debug('After save ' + JSON.stringify(u));\n       \n        $location.path('/customer-list');\n      }, function(r) {\n          //error callback\n        $log.debug('add action failed ' + JSON.stringify(r));\n        $scope.errMsg = r.msg;\n        //on failure reset the captcha widget as it can't be re-used\n       \n      }, function(s) {\n        $scope.lMessage = s;\n      }).finally(function() {\n        //google recaptcha causes input element\n        //in IE not to display any updated text.\n        //setting focus() seems to fix this issue\n        $window.jQuery('input:first').focus();\n      });\n        \n     \n    };\n    \n    \n    }]);\r\n'use strict';\n\n/**\n * @ngdoc function\n * @name freeminderApp.controller:SysactionListCtrl\n * @description\n * # SysactionListCtrl\n * Controller of the freeminderApp\n */\nangular.module('freeminderApp')\n  .controller('SysactionListCtrl', ['$scope', 'userService', '$log', '$location', function ($scope, userService, $log, $location) {\n    \n    $scope.sysActions = [];\n   \n    var handleError = function (error) {\n        // TODO: Error messaging\n        $scope.noGcMsg = \"There are currently no customer associated with you. Please try again later.\";\n        $log.debug(\"get customer list failed\"+ error);\n    };\n\n    var handleSuccess = function (data) {\n      \n        $scope.sysActions = userService.getSystemActions();\n\n    };\n      \n    console.log('Fetching system actions..');\n      \n    userService.getSystemActionList(handleSuccess, handleError);\n      \n    $scope.go = function (path) {\n        $location.path( path );\n    }\n\n  }]);\n\r\n'use strict';\n\nangular.module('freeminderApp')\n  .constant('configuration', {\n    appID: 'AYrq9CYZ78PEE49h8UdtJhOdHvtQwR5dXPD2nCpY',\n    parseKey: 'CpMZxmq8Z149FMhuQbkTO2k6Z96dMtLX7PLqpxcv',\n    fbAppId:  '1632206470353561',\n    debug: true,\n    proxyParseAPI: false,\n    proxyParseAPIPrefix: '',\n  \n   \n  });\n\r\n'use strict';\r\n\r\n/**\r\n * @ngdoc service\r\n * @name swappableWebApp.textResource\r\n * @description\r\n * # textResource\r\n * Constant in the swappableWebApp.\r\n */\r\nangular.module('swappableWebApp')\r\n  .constant('textResource' , {\r\n  'LOGIN_ERR_EMAIL': 'Please enter the email address or mobile number associated with your account.',\r\n  'LOGIN_ERR_PWD': 'Please enter your password.',\r\n  'LOGIN_PRG': 'Logging in ',\r\n  'SIGNUP_ERR_EMAIL': 'Please enter a valid email address.',\r\n  'SIGNUP_ERR_PWD': 'Invalid password. Must be at least 8 characters and include a special character.',\r\n  'SIGNUP_ERR_PHONE': 'Please enter a valid mobile number.',\r\n  'SIGNUP_PRG_VALID': 'Validating ',\r\n  'SIGNUP_PRG_REG': 'Registering ',\r\n  'LOGIN_FB_ERR': 'Unable to login with Facebook.',\r\n  'FORGOT_ERR_EMPTY': 'Please enter the email address associated with your account.',\r\n  'FORGOT_PRG': 'Processing ',\r\n  'VERIFY_ERR_CODE': 'Please enter your verification code.',\r\n  'VERIFY_ERR_CODE2': 'Please enter valid verification code.',\r\n  'VERIFY_PRG_VERIFY': 'Validating ',\r\n  'VERIFY_PRG_RESEND': 'Verifying ',\r\n  'MISC_ERR_INVALID_ARGS': 'Invalid input.',\r\n  'MISC_ERR_DEFAULT': 'Unable to process your request at this time. Please try again later.',\r\n  'SHOP_ERR_CATALOG': 'Site under maintenance - Purchases are disabled - try again later',\r\n  'SHOP_SEARCH_NO_RESULTS':'There are no gift cards that meet your search criteria.',\r\n  'ADDRESS_ERR_DEFAULT':'Invalid Address.',\r\n  'ADDRESS_VALIDATION_PRG':'Validating shipping address',\r\n  'MSGS_EMPTY': 'You currently have no transactions for this account.',\r\n  'TITLE_MAP': {\r\n    '/': 'Swappable | Buy & Swap Gift Cards | Free Mobile Gift Card App',\r\n    '/shop': 'Buy Gift Cards | Swappable',\r\n    '/wallet': 'My Wallet | Swappable',\r\n    '/wallet/no-cache': 'My Wallet | Swappable',\r\n    '/profile': 'My Profile | Swappable',\r\n    '/transactions': 'My Transactions | Swappable',\r\n    '/privacy': 'Privacy Policy | Swappable',\r\n    '/terms': 'Terms of Use | Swappable',\r\n    '/checkout': 'Checkout | Swappable',\r\n    '/signup': 'Signup | Swappable',\r\n    '/login': 'Login | Swappable',\r\n    '/verify-mobile': 'Verify Mobile | Swappable',\r\n    '/forgotpassword': 'Forgot Password | Swappable',\r\n    '/faq': 'Frequently Asked Questions | Swappable'\r\n  },\r\n  'TITLE_GA_MAP': {\r\n    '/': 'Swappable: Always give the perfect gift',\r\n    '/shop': 'Gift Store',\r\n    '/wallet': 'Gift Wallet',\r\n    '/wallet/no-cache': 'Gift Wallet',\r\n    '/profile': 'My Profile',\r\n    '/transactions': 'My Transactions',\r\n    '/privacy': 'Privacy Policy',\r\n    '/terms': 'Terms of Use',\r\n    '/checkout': 'Add Payment',\r\n    '/signup': 'Sign Up',\r\n    '/login': 'Login',\r\n    '/verify-mobile': 'Mobile Verification',\r\n    '/forgotpassword': 'Forgot Password',\r\n    '/faq': 'FAQ'\r\n  }\r\n});\r\n\r\n'use strict';\r\n\r\n/**\r\n * @ngdoc function\r\n * @name swappableWebApp.controller:HowItWorksCtrl\r\n * @description\r\n * # HowItWorksCtrl\r\n * Controller of the swappableWebApp\r\n */\r\nangular.module('freeminderApp')\r\n  .controller('HowItWorksCtrl', ['$window','$scope', '$log', function ($window,$scope,$log) {\r\n    $log.debug('inside howitworks controller');\r\n    $scope.player = null;\r\n    $scope.showhiw = function() {\r\n\r\n      // load the player only first time\r\n      if($scope.player === null) {\r\n        var tag = document.createElement('script');\r\n        tag.src = 'https://www.youtube.com/iframe_api';\r\n        var firstScriptTag = document.getElementsByTagName('script')[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n      }\r\n\r\n      // player will be initialized only once\r\n      $window.onYouTubePlayerAPIReady = function () {\r\n        var YT = $window.YT;\r\n        $log.debug('inside onYouTubePlayerAPIReady event');\r\n        $scope.player = new YT.Player('player', {\r\n          videoId: 'vTKckSD3Ja0',\r\n          playerVars: { 'autoplay': 1 }\r\n        });\r\n      };\r\n    };\r\n\r\n    $window.$('#hiw').on('show.bs.modal', function () {\r\n      $log.debug('Playing Video');\r\n      if($scope.player) {\r\n        $scope.player.seekTo(0);\r\n        $scope.player.playVideo();\r\n      }\r\n    });\r\n\r\n    $window.$('#hiw').on('hidden.bs.modal', function () {\r\n      $log.debug('Stopping Video');\r\n      if($scope.player) {\r\n        $scope.player.stopVideo();\r\n      }\r\n    });\r\n  }]);\r\n"]}